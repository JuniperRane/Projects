
public class Linked //remove duplicates from an unsorted linked list
{

	public Node head;
	
	public void add(char d)
	{
		if (head == null)
		{
			head = new Node(d);
		}
		else
		{
			Node current = head;
			while (current.next != null)
			{
				current = current.next;
			}
			current.next = new Node(d);
		}
	}

	class Node
	{
		Node next;
		char data;
				
	
		public Node(char d)
		{
			data = d;
		}
		
		
	}
	
	public void removeDups()
	{
		boolean duplicate[] = new boolean[256];
		
		Node current = head;
		
		while (current != null)
		{
			if(duplicate[(int)current.data] == true)
				deleteNode(current);
			else
			{
				duplicate[(int)current.data] = true;

			}
			
			current = current.next;
		}

	}
	
	public void deleteNode(Node trash)
	{
		Node current = head;
		
		
		if(current == trash)
		{
			current = current.next;
			return;
		}
		
		while (current.next != null)
		{
			if (current.next == trash)
			{
				current.next = current.next.next;
				return;
			}
			
			else if (current.next.next == null)
			{
				current.next = null;
				return;
			}
			
			current = current.next;
		} 
		

	
		return;
	}
	
	public void printList()
	{
		Node current = head;
		
		while(current != null)
		{
			System.out.print(current.data);
			current = current.next;
		}
		System.out.println();
	}
}
